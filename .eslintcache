[{"E:\\dev\\Code\\UptimeMonitorWeb\\src\\index.js":"1","E:\\dev\\Code\\UptimeMonitorWeb\\src\\App.js":"2","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Layout.js":"3","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Views\\SignUp.jsx":"4","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Views\\ManageEndPoints.jsx":"5","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Views\\SignIn.jsx":"6","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Views\\Home.jsx":"7","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Views\\Dashboard.jsx":"8","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\NavMenu.js":"9","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Settings\\API.js":"10","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Services\\endpointservice.js":"11","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Services\\fetchservice.js":"12","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Models\\EndPoint.js":"13","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Design\\FetchTable.jsx":"14","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Design\\LoadingSpinner.jsx":"15","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Provider\\AuthProvider.jsx":"16","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Provider\\AuthContext.jsx":"17","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Services\\dashboardservice.js":"18"},{"size":529,"mtime":1609217495308,"results":"19","hashOfConfig":"20"},{"size":907,"mtime":1609630330800,"results":"21","hashOfConfig":"20"},{"size":651,"mtime":1609715894371,"results":"22","hashOfConfig":"20"},{"size":3731,"mtime":1609645645970,"results":"23","hashOfConfig":"20"},{"size":6327,"mtime":1609740273037,"results":"24","hashOfConfig":"20"},{"size":2778,"mtime":1609736790736,"results":"25","hashOfConfig":"20"},{"size":284,"mtime":1609637273372,"results":"26","hashOfConfig":"20"},{"size":3201,"mtime":1609740292367,"results":"27","hashOfConfig":"20"},{"size":2850,"mtime":1609718763157,"results":"28","hashOfConfig":"20"},{"size":220,"mtime":1609218171875,"results":"29","hashOfConfig":"20"},{"size":856,"mtime":1609657209567,"results":"30","hashOfConfig":"20"},{"size":927,"mtime":1609718975242,"results":"31","hashOfConfig":"20"},{"size":390,"mtime":1609444382055,"results":"32","hashOfConfig":"20"},{"size":5443,"mtime":1609718708153,"results":"33","hashOfConfig":"20"},{"size":1200,"mtime":1609300905453,"results":"34","hashOfConfig":"20"},{"size":5755,"mtime":1609719384951,"results":"35","hashOfConfig":"20"},{"size":124,"mtime":1609659860853,"results":"36","hashOfConfig":"20"},{"size":253,"mtime":1609737092726,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"3zj4az",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\dev\\Code\\UptimeMonitorWeb\\src\\index.js",[],["76","77"],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\App.js",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Layout.js",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Views\\SignUp.jsx",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Views\\ManageEndPoints.jsx",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Views\\SignIn.jsx",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Views\\Home.jsx",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Views\\Dashboard.jsx",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\NavMenu.js",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Settings\\API.js",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Services\\endpointservice.js",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Services\\fetchservice.js",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Models\\EndPoint.js",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Design\\FetchTable.jsx",["78"],"import React, { Component, PureComponent } from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport {FetchService} from '../Services/fetchservice';\r\nimport \"./FetchTable.css\"\r\nimport { Context } from '../Provider/AuthContext';\r\n/**\r\n * unqiue number used for keys/id's\r\n */\r\nlet uniqueId = 0;\r\n\r\n/**\r\n * a table component that fetches & renders its own data at timed intervals\r\n */\r\nexport class FetchTable extends PureComponent {\r\n    static propTypes = {\r\n        route: PropTypes.string.isRequired,\r\n        headersMap: PropTypes.object.isRequired,\r\n        hideColumns: PropTypes.object\r\n    }\r\n    static contextType = Context;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            isLoading: true,\r\n            uniqueId: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchTimer = setInterval(() => {\r\n            this.fetchData(this.getToken());\r\n        }, 6000);\r\n        this.fetchData(this.getToken());\r\n    }\r\n    getToken = () => {\r\n        let mycontext = this.context;\r\n        return mycontext.user.token;\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.fetchTimer);\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n        if (prevProps.uri !== this.props.uri)\r\n            this.fetchData();\r\n    }\r\n\r\n    onClick_GetSelected = (event) => {\r\n        const rowData = this.getRowData(event);\r\n        this.props.onClick(rowData);\r\n    }\r\n    /**\r\n     * gets the row data from a table by using the headers tag and on click event\r\n     * @param {Object} event on click event of row\r\n     * @returns {Object} row data\r\n     */\r\n    getRowData(event) {\r\n        let x = event.target\r\n        if (!x.id)\r\n            return;\r\n        let obj ={}\r\n        while(x != null) {\r\n            obj[x.headers] = x.outerText;\r\n            x = document.getElementById(x.id).nextSibling\r\n        }\r\n        x = event.target\r\n        while(x != null) {\r\n            obj[x.headers] = x.outerText;\r\n            x = document.getElementById(x.id).previousSibling\r\n        }\r\n        return obj;\r\n    }\r\n    /**\r\n     * fetches the data from API\r\n     */\r\n     fetchData = async (token) => {\r\n        const { headersMap, route} = this.props;\r\n        let tableData = {\r\n            pagination: {},\r\n            data: []\r\n        };\r\n\r\n        !token ? console.log(\"No token found, skipping fetch in fetchtable.jsx\") :\r\n        await FetchService.fetchNow(route,\"GET\",null,token)\r\n        .then(json => { //data received\r\n                json.forEach(data => {\r\n                    //map data key/values to header columns to preserve display order\r\n                    var obj = {}\r\n                    for (let [key] of Object.entries(headersMap)) {\r\n                            obj[key] = data[key];\r\n                    }\r\n                    if (Object.keys(obj).length > 0)\r\n                        tableData.data.push(obj);\r\n                });\r\n                this.setState({ data: tableData.data, isLoading: false });\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    /**\r\n     * gets a unique id for keys\r\n     */\r\n    getId() {\r\n        uniqueId++\r\n        return uniqueId;\r\n    }\r\n    /**\r\n     * render the header row data\r\n     */\r\n    renderHeaders() {\r\n        const { headersMap, hideColumns } = this.props;\r\n        return Object.values(headersMap)\r\n                .map((header, index) => {\r\n                return <th \r\n                className={(Object.keys(headersMap)[index] === hideColumns[Object.keys(headersMap)[index]]) ? \"hide \" + Object.keys(headersMap)[index]  : \"\" + Object.keys(headersMap)[index] }\r\n                key={\"headers-\"+index}>{header}</th>;\r\n        });\r\n    }\r\n    /**\r\n     * render the row data\r\n     */\r\n    renderRows() {\r\n        const { data } = this.state;\r\n        const {headersMap, hideColumns} = this.props;\r\n        const headersArray = Object.keys(headersMap);\r\n        return (\r\n            data.map((values, index) => {\r\n                const rawData = Object.values(values);\r\n                return (\r\n                    <tr key={index + \"row\"} onMouseDown={(e)=> document.getElementById(e.target.id).style=\"cursor:grabbing\"} onMouseUp={(e)=> document.getElementById(e.target.id).style=\"cursor:grab\"} style={{cursor : \"grab\"}}>\r\n                        {rawData.map((value, cellindex) => {\r\n                                return (<td headers={headersArray[cellindex]} \r\n                                className={(headersArray[cellindex] === hideColumns[headersArray[cellindex]] ? \"hide\" : \"\")} \r\n                                id={this.getId()} key={\"cell-\"+cellindex}>{value}</td>);\r\n                        })}\r\n                    </tr>\r\n                );\r\n            })\r\n        );\r\n    }\r\n    render() {\r\n        const { isLoading, data } = this.state;\r\n        if (isLoading && data.length === 0) \r\n            return (<LoadingSpinner />);\r\n        return (\r\n                <Table  hover>\r\n                    <thead>\r\n                        <tr>\r\n                            {this.renderHeaders()}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody onClick={this.onClick_GetSelected}>\r\n                        {this.renderRows()}\r\n                    </tbody>\r\n                </Table>\r\n        );\r\n    }\r\n}","E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Design\\LoadingSpinner.jsx",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Provider\\AuthProvider.jsx",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Provider\\AuthContext.jsx",[],"E:\\dev\\Code\\UptimeMonitorWeb\\src\\components\\Services\\dashboardservice.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]